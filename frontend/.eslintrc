{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:vue/essential",
    "plugin:vue/vue3-recommended",
    "plugin:@typescript-eslint/recommended",
    "@nuxtjs/eslint-config-typescript",
    "prettier"
  ],
  "rules": {
    // ts
    "dot-notation": "off",
    "no-implied-eval": "off",
    "no-throw-literal": "off",
    "ts/await-thenable": "error",
    "ts/dot-notation": [
      "error",
      {
        "allowKeywords": true
      }
    ],
    "ts/no-floating-promises": "error",
    "ts/no-for-in-array": "error",
    "ts/no-implied-eval": "error",
    "ts/no-misused-promises": "error",
    "ts/no-throw-literal": "error",
    "ts/no-unnecessary-type-assertion": "error",
    "ts/no-unsafe-argument": "error",
    "ts/no-unsafe-assignment": "error",
    "ts/no-unsafe-call": "error",
    "ts/no-unsafe-member-access": "error",
    "ts/no-unsafe-return": "error",
    "ts/restrict-plus-operands": "error",
    "ts/restrict-template-expressions": "error",
    "ts/unbound-method": "error",
    "no-dupe-class-members": "off",
    "no-invalid-this": "off",
    "no-loss-of-precision": "off",
    "no-redeclare": "off",
    "no-use-before-define": "off",
    "no-useless-constructor": "off",
    "ts/ban-ts-comment": [
      "error",
      {
        "ts-ignore": "allow-with-description"
      }
    ],
    "ts/ban-types": [
      "error",
      {
        "types": {
          "Function": false
        }
      }
    ],
    "ts/consistent-type-definitions": [
      "error",
      "interface"
    ],
    "ts/consistent-type-imports": [
      "error",
      {
        "disallowTypeAnnotations": false,
        "prefer": "type-imports"
      }
    ],
    "ts/no-dupe-class-members": "error",
    "ts/no-dynamic-delete": "off",
    "ts/no-explicit-any": "off",
    "ts/no-extraneous-class": "off",
    "ts/no-import-type-side-effects": "error",
    "ts/no-invalid-this": "error",
    "ts/no-invalid-void-type": "off",
    "ts/no-loss-of-precision": "error",
    "ts/no-non-null-assertion": "off",
    "ts/no-redeclare": "error",
    "ts/no-require-imports": "error",
    "ts/no-unused-vars": "off",
    "ts/no-use-before-define": [
      "error",
      {
        "classes": false,
        "functions": false,
        "variables": true
      }
    ],
    "ts/no-useless-constructor": "off",
    "ts/prefer-ts-expect-error": "error",
    "ts/triple-slash-reference": "off",
    "ts/unified-signatures": "off",
    // vue
    "vue/block-order": [
      "error",
      {
        "order": [
          "template",
          "script",
          "style"
        ]
      }
    ],
    "vue/multi-word-component-names": "off",
    "vue/dot-location": [
      "error",
      "property"
    ],
    "vue/dot-notation": [
      "error",
      {
        "allowKeywords": true
      }
    ],
    "vue/eqeqeq": [
      "error",
      "smart"
    ],
    "vue/html-indent": [
      "error",
      "indent"
    ],
    "vue/html-quotes": [
      "error",
      "double"
    ],
    "vue/max-attributes-per-line": "off",
    "vue/no-dupe-keys": "off",
    "vue/no-empty-pattern": "error",
    "vue/no-extra-parens": [
      "error",
      "functions"
    ],
    "vue/no-irregular-whitespace": "error",
    "vue/no-loss-of-precision": "error",
    "vue/no-restricted-syntax": [
      "error",
      "DebuggerStatement",
      "LabeledStatement",
      "WithStatement",
    ],
    "vue/no-restricted-v-bind": [
      "error",
      "/^v-/"
    ],
    "vue/no-setup-props-reactivity-loss": "off",
    "vue/no-sparse-arrays": "error",
    "vue/no-unused-refs": "error",
    "vue/no-useless-v-bind": "error",
    "vue/no-v-html": "off",
    "vue/object-shorthand": [
      "error",
      "always",
      {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "vue/prefer-separate-static-class": "error",
    "vue/prefer-template": "error",
    "vue/prop-name-casing": [
      "error",
      "camelCase"
    ],
    "vue/require-default-prop": "off",
    "vue/require-prop-types": "off",
    "vue/space-infix-ops": "error",
    "vue/space-unary-ops": [
      "error",
      {
        "nonwords": false,
        "words": true
      }
    ],
  }
  // "parser": "@babel/eslint-parser",
  // "parserOptions": {
  //   "sourceType": "module"
  // },
  // "extends": [
  //   "@nuxtjs/eslint-config-typescript"
  // ]
}